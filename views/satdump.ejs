<!DOCTYPE html>
<html>
<head>
  <title>SatDump Monitor</title>
  <script src="/vendor/luxon/global/luxon.min.js"></script>
  <script src="/vendor/chart/chart.min.js"></script>
  <script src="/vendor/chart-adapter/chartjs-adapter-luxon.umd.min.js"></script>
  <script src="/vendor/chart-plugin/chartjs-plugin-streaming.min.js"></script>
  <link rel="stylesheet" href="../css/styles.css">
</head>
<body>

  <div class="status-section">
    <h2>Status Info</h2>
    <div id="status-container">
      <%- statusHtml %>
    </div>
  </div>

  <div class="status-section">
    <h2>ðŸ“ˆ SNR Realtime Chart</h2>
    <canvas id="snrChart" height="120"></canvas>
  </div>

  <div class="status-section">
    <h2>ðŸ”§ Live JSON Info</h2>
    <pre class="info-box" id="json-box"><%= JSON.stringify(apiData, null, 2) %></pre>
  </div>

  <script>
    const ctx = document.getElementById('snrChart').getContext('2d');

    async function updateStatusHtml() {
    try {
      const res = await fetch('/local/satdump/html');
      if (!res.ok) throw new Error('Failed to fetch status HTML');
      const html = await res.text();
      document.getElementById('status-container').innerHTML = html;
    } catch (err) {
      console.error('Error updating status HTML:', err);
    }
  }

    const snrChart = new Chart(ctx, {
      type: 'line',
      data: {
        datasets: [{
          label: 'SNR (dB)',
          borderColor: 'lime',
          backgroundColor: 'rgba(0,255,0,0.1)',
          data: []
        }]
      },
      options: {
        animation: false,
        responsive: true,
        plugins: {
          legend: { display: true }
        },
        scales: {
          x: {
            type: 'realtime',
            realtime: {
              duration: 30000,
              refresh: 1000,
              delay: 2000,
              onRefresh: async chart => {
                try {
                  const res = await fetch('/local/satdump/live');
                  const data = await res.json();
                  const snr = data?.live_pipeline?.psk_demod?.snr ?? null;
                  if (snr !== null) {
                    chart.data.datasets[0].data.push({
                      x: Date.now(),
                      y: snr
                    });

                    document.getElementById('json-box').textContent = JSON.stringify(data, null, 2);
                  }
                } catch (err) {
                  console.error('Failed to fetch SNR data', err);
                }
              }
            }
          },
          y: {
            beginAtZero: true,
            title: { display: true, text: 'SNR (dB)' }
          }
        }
      }
    });
    setInterval(updateStatusHtml, 5000); 
  </script>
</body>
</html>